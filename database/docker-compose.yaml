services:
  database:
    platform: linux/amd64
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - database-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - database
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
    restart: unless-stopped

configs:
  servers.json:
    content: |
      {
        "Servers": {
          "1": {
            "Group": "Servers",
            "Name": "Local-Postgres",
            "Host": "${PGADMIN_SERVER_1_HOST}",
            "Port": ${PGADMIN_SERVER_1_PORT},
            "MaintenanceDB": "${POSTGRES_DB}",
            "Username": "${POSTGRES_USER}",
            "SSLMode": "${PGADMIN_SERVER_1_SSL_MODE}",
            "Comment": "This server will connect to the instance we've created in our compose file."
          }
        }
      }
volumes:
  database-data:
